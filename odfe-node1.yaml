apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: odfe-node1
  name: odfe-node1
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: odfe-node1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.network/odfe-net: "true"
        io.kompose.service: odfe-node1
    spec:
      initContainers:
        - name: permissions-fix
          image: busybox
          volumeMounts:
            - name: odfe-data1
              mountPath: /usr/share/elasticsearch/data
          command: [ 'chown' ]
          args: [ '1000:1000', '/usr/share/elasticsearch/data' ]
      containers:
        - env:
            - name: discovery.type
              value: single-node
            - name: node.name
              value: odfe-node1
          image: amazon/opendistro-for-elasticsearch:1.13.2
          name: odfe-node1
          ports:
            - containerPort: 9200
          resources:
            requests:
              memory: "2000Mi"
              cpu: "500m"
            limits:
              memory: "3000Mi"
              cpu: "750m"
          volumeMounts:
            - mountPath: /usr/share/elasticsearch/data
              name: odfe-data1
      restartPolicy: Always
      volumes:
        - name: odfe-data1
          gcePersistentDisk:
            pdName: odfe-data
            fsType: ext4
status: {}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: odfe-node1
  name: odfe-node1
spec:
  ports:
    - name: "9200"
      port: 9200
      targetPort: 9200
  selector:
    io.kompose.service: odfe-node1
status:
  loadBalancer: {}


---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  creationTimestamp: null
  name: odfe-net
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              io.kompose.network/odfe-net: "true"
  podSelector:
    matchLabels:
      io.kompose.network/odfe-net: "true"
